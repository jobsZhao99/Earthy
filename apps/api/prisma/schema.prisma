
generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BookingRecordType {
  NEW
  TRANSFER_IN
  TRANSFER_OUT
  CANCELL
}

enum BookingStatus {
  FUTURE        // 已预订但未入住
  CHECKED_IN    // 已入住
  CHECKED_OUT   // 已退房
  CANCELLED     // 已取消
}



// 金额口径：收入正数，费用负数。periodMonth 统一存当月 UTC 月初。
enum AccountCode {
  RENT    // 当期应计租金收入
  PARKING
  BEDDING
  CLEANING
  OTHERS
}


enum Channel {
  AIRBNB
  BOOKING_COM
  EXPEDIA
  DIRECT
  LEASING_CONTRACT
  OTHER
}

enum RoomStatus {
  CLEANED              // 已清洁，随时可用
  CLEANING_SCHEDULED   // 已安排清洁，但还没完成

  OCCUPIED             // 已入住
  CHECKED_OUT_DIRTY          // 已退房，但还没清洁

  ON_HOLD              // 暂时锁定，不对外出租（例如维修/房东保留）
  MAINTENANCE          // 维修中
  OFF_MARKET           // 永久下架，不对外出租

  RESERVED             // 已预订，但客人还没入住
}



model Ledger {
  id        String   @id @default(cuid())
  name      String   @unique
  properties Property[] 
  journalEntries JournalEntry[]
  // 可选：currency, timezone, companyId 等
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model Property {
  id        String   @id @default(cuid())
  name      String
  address   String?
  ledgerId   String // 多账簿支持
  ledger  Ledger @relation(fields: [ledgerId], references: [id])
  
  rooms     Room[]
  timezone  String   @default("America/Los_Angeles") // IANA TZ
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([ledgerId, name])
  @@index([ledgerId])
}

model Room {
  id          String   @id @default(cuid())
  propertyId  String
  property    Property @relation(fields: [propertyId], references: [id])

  label       String
  nightlyRateCents Int? 

  bookings    BookingRecord[]

  cleaningStatus RoomStatus @default(CHECKED_OUT_DIRTY)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt


  
  @@unique([propertyId, label])
}


model Guest {
    id        String   @id @default(cuid())
    name      String
    phone     String?
    email     String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt 

    bookings  BookingRecord[]

}

// 租客预订记录, 包含新预订、退房、取消等状态
model BookingRecord {
    id            String   @id @default(cuid())
    roomId        String
    type          BookingRecordType   @default(NEW)
    status        BookingStatus      @default(FUTURE) // 新增状态字段
    guestId       String
    checkIn       DateTime
    checkOut      DateTime
    guestTotalCents Int?          // 租客支付总额（Gross, 含平台费/税费）
    payoutCents     Int?          // 平台打给房东的净额 (Host Payout)
    journalLines    JournalLine[]

    channel       Channel  @default(AIRBNB)
    confirmationCode String?  // 平台订单号
    contractUrl   String?  // 租赁合同链接（可选）
    tzSnapshot    String?   // 生成时记录使用的时区（可选但很有用）
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    memo            String?   @db.Text

  room  Room  @relation(fields: [roomId], references: [id])
  guest Guest @relation(fields: [guestId], references: [id])

    @@index([roomId,guestId])
}



model JournalEntry {
  id          String    @id @default(cuid())
  periodMonth DateTime  // 该月1号(UTC)
  ledgerId    String
  ledger      Ledger    @relation(fields: [ledgerId], references: [id])
  memo        String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  journalLines       JournalLine[]


  @@unique([periodMonth, ledgerId]) // 每月一条总分录（够用了；多账簿可改为 periodMonth+ledger）
  @@index([periodMonth])
}

model JournalLine {
  id           String    @id @default(cuid())
  journalId    String 
  journal  JournalEntry @relation(fields: [journalId], references: [id])


  bookingId    String
  booking      BookingRecord   @relation(fields: [bookingId], references: [id])


  account      AccountCode
  amountCents  Int  // 收入正数，费用负数
  createdAt    DateTime  @default(now())


  // 幂等过账关键：同一 booking、同一科目、同一会计月只有一条
  @@unique([bookingId, account,journalId])
  @@index([account,journalId])
}